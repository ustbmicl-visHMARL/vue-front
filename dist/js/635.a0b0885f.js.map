{"version":3,"file":"js/635.a0b0885f.js","mappings":"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","sources":["webpack://vue-library/./src/views/Index/Back/Plot/index.vue","webpack://vue-library/src/views/Index/Back/Plot/index.vue","webpack://vue-library/./src/views/Index/Back/Plot/index.vue?53cd","webpack://vue-library/./src/views/Index/Back/Plot/index.vue?4912"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-container',[_c('el-header',[_vm._v(\" \"+_vm._s(this.expName)+\" \"),_c('div',[_c('el-popover',{attrs:{\"placement\":\"bottom\",\"title\":\"标题\",\"width\":\"200\",\"trigger\":\"click\"}},[_c('div',[_vm._v(\" 对比实验 \"),_c('el-select',{attrs:{\"placeholder\":\"请选择\"},on:{\"change\":_vm.handleSeriesTypeChange},model:{value:(_vm.chartSeriesType),callback:function ($$v) {_vm.chartSeriesType=$$v},expression:\"chartSeriesType\"}},_vm._l((_vm.chartSeriesTypes),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1),_c('el-button',{attrs:{\"slot\":\"reference\"},slot:\"reference\"},[_vm._v(\"添加\")])],1),_c('div',[_vm._v(\" 所有实验 \"),_c('el-select',{attrs:{\"placeholder\":\"请选择\"},model:{value:(_vm.addExpId),callback:function ($$v) {_vm.addExpId=$$v},expression:\"addExpId\"}},_vm._l((_vm.expList),function(item){return _c('el-option',{key:item.expId,attrs:{\"label\":item.expName,\"value\":item.expId,\"disabled\":item.disabled}})}),1),_c('el-button',{attrs:{\"slot\":\"reference\"},on:{\"click\":_vm.addExpDatas},slot:\"reference\"},[_vm._v(\"添加\")])],1),_c('el-button',{attrs:{\"slot\":\"reference\"},slot:\"reference\"},[_vm._v(\"添加实验\")])],1),_vm._l((_vm.showedExp),function(item,index){return _c('div',{key:index},[_vm._v(\" \"+_vm._s(item.expName)+\" \")])})],2)]),_c('el-container',[_c('el-aside',{attrs:{\"width\":\"200px\"}},[_c('div',[_vm._v(\"当前图表：\"+_vm._s(this.chartIndex))]),_c('div',[_vm._v(\" 选择数据 \"),_c('el-select',{attrs:{\"placeholder\":\"请选择\"},on:{\"change\":_vm.handleDataChange},model:{value:(_vm.algDataId),callback:function ($$v) {_vm.algDataId=$$v},expression:\"algDataId\"}},_vm._l((_vm.dataOptions),function(item){return _c('el-option',{key:item.id,attrs:{\"label\":item.dataName,\"value\":item.id}})}),1)],1),_c('div',[_vm._v(\" 修改标题 \"),_c('el-input',{attrs:{\"placeholder\":\"请输入内容\"},model:{value:(_vm.chartOptions[_vm.chartIndex].title.text),callback:function ($$v) {_vm.$set(_vm.chartOptions[_vm.chartIndex].title, \"text\", $$v)},expression:\"chartOptions[chartIndex].title.text\"}}),_c('el-button',{on:{\"click\":_vm.handleTitleChange}},[_vm._v(\"确认\")])],1),_c('div',[_vm._v(\" 图表样式 \"),_vm._l((_vm.showedExp),function(item,index){return _c('div',{key:index},[_vm._v(\" \"+_vm._s(item.expName)+\" \"),_c('el-select',{attrs:{\"placeholder\":\"请选择\"},on:{\"change\":function($event){return _vm.handleSeriesTypeChange(index)}},model:{value:(_vm.chartOptions[_vm.chartIndex].series[index].type),callback:function ($$v) {_vm.$set(_vm.chartOptions[_vm.chartIndex].series[index], \"type\", $$v)},expression:\"chartOptions[chartIndex].series[index].type\"}},_vm._l((_vm.chartSeriesTypes),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1)})],2)]),_c('el-main',[_c('el-row',{attrs:{\"gutter\":0}},[_c('el-col',{attrs:{\"span\":6}},[_c('div',{ref:'chart' + 0,staticClass:\"grid-content bg-purple\"}),_c('el-button',{on:{\"click\":function($event){return _vm.handleSelectChart(0)}}},[_vm._v(\" 设置 \")])],1),_c('el-col',{attrs:{\"span\":6}},[_c('div',{ref:'chart' + 1,staticClass:\"grid-content bg-purple\"}),_c('el-button',{on:{\"click\":function($event){return _vm.handleSelectChart(1)}}},[_vm._v(\" 设置 \")])],1)],1),_c('el-row',{attrs:{\"gutter\":0}},[_c('el-col',{attrs:{\"span\":6}},[_c('div',{ref:'chart' + 2,staticClass:\"grid-content bg-purple\"}),_c('el-button',{on:{\"click\":function($event){return _vm.handleSelectChart(2)}}},[_vm._v(\" 设置 \")])],1),_c('el-col',{attrs:{\"span\":6}},[_c('div',{ref:'chart' + 3,staticClass:\"grid-content bg-purple\"}),_c('el-button',{on:{\"click\":function($event){return _vm.handleSelectChart(3)}}},[_vm._v(\" 设置 \")])],1)],1)],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <el-container>\r\n      <el-header>\r\n        {{ this.expName }}\r\n        <div>\r\n          <el-popover\r\n            placement=\"bottom\"\r\n            title=\"标题\"\r\n            width=\"200\"\r\n            trigger=\"click\"\r\n          >\r\n            <div>\r\n              对比实验\r\n              <el-select\r\n                v-model=\"chartSeriesType\"\r\n                placeholder=\"请选择\"\r\n                @change=\"handleSeriesTypeChange\"\r\n              >\r\n                <el-option\r\n                  v-for=\"item in chartSeriesTypes\"\r\n                  :key=\"item.value\"\r\n                  :label=\"item.label\"\r\n                  :value=\"item.value\"\r\n                >\r\n                </el-option>\r\n              </el-select>\r\n              <el-button slot=\"reference\">添加</el-button>\r\n            </div>\r\n            <div>\r\n              所有实验\r\n              <el-select\r\n                v-model=\"addExpId\"\r\n                placeholder=\"请选择\"\r\n              >\r\n                <el-option\r\n                  v-for=\"item in expList\"\r\n                  :key=\"item.expId\"\r\n                  :label=\"item.expName\"\r\n                  :value=\"item.expId\"\r\n                  :disabled=\"item.disabled\"\r\n                >\r\n                </el-option>\r\n              </el-select>\r\n              <el-button @click=\"addExpDatas\" slot=\"reference\">添加</el-button>\r\n            </div>\r\n            <el-button slot=\"reference\">添加实验</el-button>\r\n          </el-popover>\r\n          <div v-for=\"(item, index) in showedExp\" :key=\"index\">\r\n            {{ item.expName }}\r\n          </div>\r\n        </div>\r\n      </el-header>\r\n      <el-container>\r\n        <el-aside width=\"200px\">\r\n          <div>当前图表：{{ this.chartIndex }}</div>\r\n          <div>\r\n            选择数据\r\n            <el-select\r\n              v-model=\"algDataId\"\r\n              placeholder=\"请选择\"\r\n              @change=\"handleDataChange\"\r\n            >\r\n              <el-option\r\n                v-for=\"item in dataOptions\"\r\n                :key=\"item.id\"\r\n                :label=\"item.dataName\"\r\n                :value=\"item.id\"\r\n              >\r\n              </el-option>\r\n            </el-select>\r\n          </div>\r\n          <div>\r\n            修改标题\r\n            <el-input v-model=\"chartOptions[chartIndex].title.text\" placeholder=\"请输入内容\"></el-input>\r\n            <el-button @click=\"handleTitleChange\">确认</el-button>\r\n          </div>\r\n          <div>\r\n            图表样式\r\n            <div\r\n              v-for=\"(item, index) in showedExp\"\r\n              :key=\"index\"\r\n            >\r\n              {{ item.expName }}\r\n              <el-select\r\n                v-model=\"chartOptions[chartIndex].series[index].type\"\r\n                placeholder=\"请选择\"\r\n                @change=\"handleSeriesTypeChange(index)\"\r\n              >\r\n                <el-option\r\n                  v-for=\"item in chartSeriesTypes\"\r\n                  :key=\"item.value\"\r\n                  :label=\"item.label\"\r\n                  :value=\"item.value\"\r\n                >\r\n                </el-option>\r\n              </el-select>\r\n            </div>\r\n          </div>\r\n        </el-aside>\r\n        <el-main>\r\n          <el-row :gutter=\"0\">\r\n            <el-col :span=\"6\"\r\n              ><div\r\n                class=\"grid-content bg-purple\"\r\n                :ref=\"'chart' + 0\"\r\n              ></div\r\n            >\r\n            <el-button @click=\"handleSelectChart(0)\"> 设置 </el-button>\r\n            </el-col>\r\n            <el-col :span=\"6\"\r\n              ><div\r\n                class=\"grid-content bg-purple\"\r\n                :ref=\"'chart' + 1\"\r\n              ></div\r\n            ><el-button @click=\"handleSelectChart(1)\"> 设置 </el-button></el-col>\r\n          </el-row>\r\n          <el-row :gutter=\"0\">\r\n            <el-col :span=\"6\"\r\n              ><div\r\n                class=\"grid-content bg-purple\"\r\n                :ref=\"'chart' + 2\"\r\n              ></div\r\n            ><el-button @click=\"handleSelectChart(2)\"> 设置 </el-button></el-col>\r\n            <el-col :span=\"6\"\r\n              ><div\r\n                class=\"grid-content bg-purple\"\r\n                :ref=\"'chart' + 3\"\r\n              ></div\r\n            ><el-button @click=\"handleSelectChart(3)\"> 设置 </el-button></el-col>\r\n          </el-row>\r\n        </el-main>\r\n      </el-container>\r\n    </el-container>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport {\r\n  reqGetAlgDatas,\r\n  reqGetExpsData,\r\n  reqGetExpList,\r\n  reqGetExpDatas,\r\n} from \"@/api\";\r\nexport default {\r\n  name: \"Chart\",\r\n\r\n  data() {\r\n    return {\r\n      chartsNum: 4,\r\n      // 算法id\r\n      algId: 1,\r\n      // 实验id\r\n      expId: 1,\r\n      // 实验名称\r\n      expName: \"实验1\",\r\n      // 目前操作的图表编号\r\n      chartIndex: 1,\r\n      // 目前图表展示的数据\r\n      algDataId: 2,\r\n      // 正在展示的实验\r\n      showedExp: [],\r\n      dataOptions: [],\r\n      addExpId: null,\r\n      showedAlgData: [],\r\n\r\n      expList: [],\r\n\r\n      chartOptions: [\r\n        {\r\n          legend: { x: \"center\", y: \"top\"},\r\n          title: { text: \"\" },\r\n          xAxis: { type: \"category\", data: [\"A\", \"B\", \"C\", \"D\", \"E\"] },\r\n          yAxis: { type: \"value\" },\r\n          series: [],\r\n        },\r\n        {\r\n          legend: { x: \"center\", y: \"top\"},\r\n          title: { text: \"\" },\r\n          xAxis: { type: \"category\", data: [\"A\", \"B\", \"C\", \"D\", \"E\"] },\r\n          yAxis: { type: \"value\" },\r\n          series: [],\r\n        },\r\n        {\r\n          legend: { x: \"center\", y: \"top\"},\r\n          title: { text: \"\" },\r\n          xAxis: { type: \"category\", data: [\"A\", \"B\", \"C\", \"D\", \"E\"] },\r\n          yAxis: { type: \"value\" },\r\n          series: [],\r\n        },\r\n        {\r\n          legend: { x: \"center\", y: \"top\"},\r\n          title: { text: \"\" },\r\n          xAxis: { type: \"category\", data: [\"A\", \"B\", \"C\", \"D\", \"E\"] },\r\n          yAxis: { type: \"value\" },\r\n          series: [],\r\n        },\r\n      ],\r\n\r\n      charts: [],\r\n\r\n      chartSeriesType: \"\",\r\n      chartSeriesTypes: [\r\n        {\r\n          label: \"折线图\",\r\n          value: \"line\",\r\n        },\r\n        {\r\n          label: \"柱状图\",\r\n          value: \"bar\",\r\n        },\r\n        {\r\n          label: \"饼状图\",\r\n          value: \"pie\",\r\n        },\r\n        {\r\n          label: \"散点图\",\r\n          value: \"scatter\",\r\n        },\r\n      ],\r\n\r\n      titleText: \"\",\r\n\r\n    };\r\n  },\r\n\r\n  computed: {\r\n  },\r\n  created() {\r\n    this.getExpList();\r\n    this.chartIndex = 0\r\n  },\r\n  mounted() {\r\n    this.initializeCharts();\r\n    this.getAlgDatas();\r\n  },\r\n\r\n  methods: {\r\n\r\n    // 初始化四个表格\r\n    initializeCharts() {\r\n      for (let i = 0; i < 4; i++) {\r\n        const chartContainer = this.$refs[\"chart\" + i]; // 获取DOM元素\r\n        if (chartContainer) {\r\n          const chart = this.$echarts.init(chartContainer); // 将DOM初始化为图表\r\n          this.charts.push(chart);\r\n        }\r\n      }\r\n    },\r\n\r\n    // 改变表格中的数据\r\n    handleDataChange() {\r\n      var expIdList = this.showedExp.map(item => item.expId)\r\n\r\n\r\n      // 请求数据\r\n      reqGetExpsData({ expIdList: expIdList, algDataId: this.algDataId }).then(\r\n        (response) => {\r\n          if (response.data.status == 1) {\r\n            alert(response.data.msg);\r\n          } else if (response.data.status == 0) {\r\n            for(let i = 0;i<response.data.data.length;i++){\r\n              this.chartOptions[this.chartIndex].series[i].data =response.data.data[i];\r\n            }\r\n            this.showedAlgData[this.chartIndex] = this.dataOptions.find(item => item.id === this.algDataId);\r\n            this.chartOptions[this.chartIndex].title.text = this.showedAlgData[this.chartIndex].dataName\r\n            //this.setxAxisData(true)\r\n            this.handleChartContentChange();\r\n          }\r\n        }\r\n      );\r\n    },\r\n\r\n    // 切换图表\r\n    handleSelectChart(chartIndex) {\r\n      this.chartIndex = chartIndex;\r\n    },\r\n\r\n    // 修改图表标题\r\n    handleTitleChange() {\r\n      this.handleChartContentChange();\r\n    },\r\n\r\n    // 更新图表内容\r\n    handleChartContentChange() {\r\n      this.charts[this.chartIndex].setOption(\r\n        this.chartOptions[this.chartIndex]\r\n      );\r\n    },\r\n\r\n    handleAllChartContentChange() {\r\n      for(let i=0;i<4;i++){\r\n        this.charts[i].setOption(\r\n          this.chartOptions[i]\r\n        );\r\n      }\r\n    },\r\n\r\n    // 改变图表样式\r\n    handleSeriesTypeChange() {\r\n      this.handleChartContentChange();\r\n    },\r\n\r\n    // 获取对比实验列表\r\n    getCEList() {},\r\n\r\n    // 获取实验列表\r\n    getExpList() {\r\n      reqGetExpList({ expId: this.expId, algId: this.algId }).then(\r\n        (response) => {\r\n          this.expList = response.data.data;\r\n        }\r\n      );\r\n    },\r\n\r\n    addExpDatas() {\r\n      let showedAlgDataIds = this.showedAlgData.map(item => item.id);\r\n      reqGetExpDatas({ expId: this.addExpId, showedAlgDataIds: showedAlgDataIds }).then(\r\n        (response) => {\r\n          // 初始化的时候\r\n          if(this.addExpId == this.expId){\r\n            var expName = this.expName\r\n          }\r\n          // 添加对比试验的时候\r\n          else{\r\n            var expName = this.expList.find(exp => exp.expId === this.addExpId).expName;\r\n          }\r\n          this.showedExp.push({expId: this.addExpId, expName: expName})\r\n          const datas = response.data.data\r\n          for(let i = 0; i<this.chartsNum; i++){\r\n            this.chartOptions[i].series.push({name:expName, type: \"line\", data:datas[i]})\r\n            if(this.addExpId == this.expId){\r\n              this.chartOptions[i].title.text = this.showedAlgData[i].dataName\r\n            }\r\n          }\r\n          if(this.addExpId != this.expId){\r\n            this.expList.find(item => item.expId == this.addExpId).disabled = true\r\n          }\r\n          this.setxAxisData(false)\r\n          this.handleAllChartContentChange()\r\n          this.addExpId = null\r\n        }\r\n      );\r\n    },\r\n\r\n    // \r\n    getAlgDatas() {\r\n      reqGetAlgDatas(this.algId).then((response) => {\r\n        this.dataOptions = response.data.data;\r\n        for(let i = 0;i<this.chartsNum;i++){\r\n          this.showedAlgData.push(this.dataOptions[i % this.dataOptions.length])\r\n        }\r\n        this.addExpId = this.expId\r\n        this.addExpDatas()\r\n      });\r\n    },\r\n\r\n    setxAxisData(single) {\r\n      if(single){\r\n        var lengths = this.chartOptions[this.chartIndex].series.map(item => item.data.length)\r\n        var max = Math.max(lengths)\r\n        this.chartOptions[this.chartIndex].xAxis.data = Array(max).fill().map((_, idx) => idx);\r\n      } else{\r\n        for(let i = 0;i<this.chartsNum;i++){\r\n          var lengths = this.chartOptions[i].series.map(item => item.data.length)\r\n          var max = Math.max(...lengths)\r\n          this.chartOptions[i].xAxis.data = Array(max).fill().map((_, idx) => idx);\r\n        }\r\n      }\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.el-col {\r\n  border-radius: 4px;\r\n}\r\n.bg-purple-dark {\r\n  background: #99a9bf;\r\n}\r\n.bg-purple {\r\n  background: #d3dce6;\r\n}\r\n.bg-purple-light {\r\n  background: #e5e9f2;\r\n}\r\n.grid-content {\r\n  border-radius: 4px;\r\n  min-height: 36px;\r\n  width: 500px;\r\n  height: 400px;\r\n  margin: 20px auto;\r\n}\r\n.row-bg {\r\n  padding: 10px 0;\r\n  background-color: #f9fafc;\r\n}\r\n</style>","import mod from \"-!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=39db472a&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=39db472a&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","_v","_s","expName","attrs","on","handleSeriesTypeChange","model","value","chartSeriesType","callback","$$v","expression","_l","chartSeriesTypes","item","key","label","slot","addExpId","expList","expId","disabled","addExpDatas","showedExp","index","chartIndex","handleDataChange","algDataId","dataOptions","id","dataName","chartOptions","title","text","$set","handleTitleChange","$event","series","type","ref","staticClass","handleSelectChart","staticRenderFns","name","data","chartsNum","algId","showedAlgData","legend","x","y","xAxis","yAxis","charts","titleText","computed","created","getExpList","mounted","initializeCharts","getAlgDatas","methods","i","chartContainer","$refs","chart","$echarts","init","push","expIdList","map","reqGetExpsData","then","response","status","alert","msg","length","find","handleChartContentChange","setOption","handleAllChartContentChange","getCEList","reqGetExpList","showedAlgDataIds","reqGetExpDatas","exp","datas","setxAxisData","reqGetAlgDatas","single","lengths","max","Math","Array","fill","_","idx","component"],"sourceRoot":""}